client_max_body_size=1000000
server{listen=8081
server_name=localhost
host=127.0.0.1
root=.
index=index.html
methods=GET,POST
client_max_body_size=1000000
error_page:404=/custom/404.html
error_page:500=/custom/500.html
autoindex=on
location=/cgi{root=./data
root=./data
methods=GET,POST
cgi_path=/usr/bin/python3
extension=py
}location=/default{root=./data
root=./data
methods=GET
autoindex=on
}location=/google{methods=GET,POST
methods=GET,POST
return=https://www.google.com
}location=cgiBla{extension=bla
extension=bla
methods=POST
cgi_path=ubuntu_cgi_tester
}}
Parsed
Setting sockets 
Checking server : localhost - 127.0.0.1:8081
 Creating new socket 
created a new socket with fd: 3
port: 8081
host: 127.0.0.1
Socket setup completed.
running
selecting
max fd: 3
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 3
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 3
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 3
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /data/cgi/ HTTP/1.1
Host: localhost:8081
Connection: keep-alive
Cache-Control: max-age=0
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- localhost
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: .
Index: index.html
Methods:  GET POST 
Autoindex: on
Return: 
Cgi path: 
Extension: 
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
728
***********************************************
location extension : 
path extensiongi/
 ---------- CURRENT LOCATION VALUES ---------- 
Request path : /data/cgi/
Final path : ./data/cgi/
Path before method routing :./data/cgi/
HANDLING METHOD GET
Requesting ressource at path : ./data/cgi/
Handling directory
LIST DIRECTORY
URL : invalid_syntax.py
URL : get_test.py
URL : infinite_loop.py
URL : db.txt
URL : post_file.py
URL : hello_world.py
URL : json.py
URL : ..
URL : .

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 473

<!DOCTYPE html>
<html>
<head>
<title>Directory listing</title>
</head>
<body>
<h1>Directory listing</h1>
<ul>
<li><a href="invalid_syntax.py">invalid_syntax.py</a></li>
<li><a href="get_test.py">get_test.py</a></li>
<li><a href="infinite_loop.py">infinite_loop.py</a></li>
<li><a href="db.txt">db.txt</a></li>
<li><a href="post_file.py">post_file.py</a></li>
<li><a href="hello_world.py">hello_world.py</a></li>
<li><a href="json.py">json.py</a></li>
</ul>
</body>
</html>

***********************************************
send value 538
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /data/cgi/invalid_syntax.py HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8081/data/cgi/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- localhost
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: .
Index: index.html
Methods:  GET POST 
Autoindex: on
Return: 
Cgi path: 
Extension: 
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
768
***********************************************
location extension : 
path extension.py
 ---------- CURRENT LOCATION VALUES ---------- 
Request path : /data/cgi/invalid_syntax.py
Final path : ./data/cgi/invalid_syntax.py
Path before method routing :./data/cgi/invalid_syntax.py
HANDLING METHOD GET
Requesting ressource at path : ./data/cgi/invalid_syntax.py
Sending file ./data/cgi/invalid_syntax.py

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Disposition: attachment
Content-Type: application/octet-stream
Content-Length: 45

#!/usr/bin/python
var x;

while (1) :
    x=1
***********************************************
send value 157
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/ HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
697
***********************************************
location extension : py
path extensiongi/
 ---------- CURRENT LOCATION VALUES ---------- 
Request path : /cgi/
Final path : ./data/cgi/
Path before method routing :./data/cgi/
HANDLING METHOD GET
Requesting ressource at path : ./data/cgi/
Handling directory
LIST DIRECTORY
URL : invalid_syntax.py
URL : get_test.py
URL : infinite_loop.py
URL : db.txt
URL : post_file.py
URL : hello_world.py
URL : json.py
URL : ..
URL : .

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 473

<!DOCTYPE html>
<html>
<head>
<title>Directory listing</title>
</head>
<body>
<h1>Directory listing</h1>
<ul>
<li><a href="invalid_syntax.py">invalid_syntax.py</a></li>
<li><a href="get_test.py">get_test.py</a></li>
<li><a href="infinite_loop.py">infinite_loop.py</a></li>
<li><a href="db.txt">db.txt</a></li>
<li><a href="post_file.py">post_file.py</a></li>
<li><a href="hello_world.py">hello_world.py</a></li>
<li><a href="json.py">json.py</a></li>
</ul>
</body>
</html>

***********************************************
send value 538
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/invalid_syntax.py HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8081/cgi/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
758
***********************************************
location extension : py
path extension.py
Path before method routing :./cgi/invalid_syntax.py
CGI Handling
Query : QUERY_STRING=
CGIHandler iniated with arguments: /usr/bin/python3 ./cgi/invalid_syntax.py
CGIHandler iniated with environment variables: 
SERVER_PROTOCOL=HTTP/1.1
QUERY_STRING=
Output from CGI script: 

----- ERROR ------
(⊙…⊙ ) 500 CGI output does not contain Content-Type header
------------------
Sending file ./data/default/500.html

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 500 Internal Server Error
Content-Disposition: inline
Content-Type: text/html
Content-Length: 1047

<!DOCTYPE html>
<html>
    <head>
        <title>500 - Internal Server Error</title>
        <style type=text/css>
            h1{
                color: #D3D3D3;    
                font-weight: 900;   
                font-size: 64px;    
                font-family: Helvetica, Arial, sans-serif;   
            }
            h2{
                color: #D3D3D3;    
                font-weight: 900;   
                font-size: 32px;    
                font-family: Helvetica, Arial, sans-serif;   
            }
            p {    
                color: #D3D3D3;    
                font-weight: 900;   
                font-size: 20px;    
                font-family: Helvetica, Arial, sans-serif;   
            }
        </style>
    </head>

    <body>
        <main>
            <center>
                <br /><br /><br /><br /><br /><br/>
                    <h2>Webserv</h2>
                    <h1>500 - Internal Server Error</h1>
                <br /><br /><br /><br />
            </center>
        </main>
    </body>
</html>

***********************************************
send value 1161
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/hello_world.py HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
711
***********************************************
location extension : py
path extension.py
Path before method routing :./cgi/hello_world.py
CGI Handling
Query : QUERY_STRING=
CGIHandler iniated with arguments: /usr/bin/python3 ./cgi/hello_world.py
CGIHandler iniated with environment variables: 
SERVER_PROTOCOL=HTTP/1.1
QUERY_STRING=
Output from CGI script: 
Content-Type: text/html

hello world!

Content-type is: text/html
CGI execution was successful.

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 14


hello world!

***********************************************
send value 78
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/ HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
697
***********************************************
location extension : py
path extensiongi/
 ---------- CURRENT LOCATION VALUES ---------- 
Request path : /cgi/
Final path : ./data/cgi/
Path before method routing :./data/cgi/
HANDLING METHOD GET
Requesting ressource at path : ./data/cgi/
Handling directory
LIST DIRECTORY
URL : invalid_syntax.py
URL : get_test.py
URL : infinite_loop.py
URL : db.txt
URL : post_file.py
URL : hello_world.py
URL : json.py
URL : ..
URL : .

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 473

<!DOCTYPE html>
<html>
<head>
<title>Directory listing</title>
</head>
<body>
<h1>Directory listing</h1>
<ul>
<li><a href="invalid_syntax.py">invalid_syntax.py</a></li>
<li><a href="get_test.py">get_test.py</a></li>
<li><a href="infinite_loop.py">infinite_loop.py</a></li>
<li><a href="db.txt">db.txt</a></li>
<li><a href="post_file.py">post_file.py</a></li>
<li><a href="hello_world.py">hello_world.py</a></li>
<li><a href="json.py">json.py</a></li>
</ul>
</body>
</html>

***********************************************
send value 538
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/hello_world.py HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8081/cgi/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
755
***********************************************
location extension : py
path extension.py
Path before method routing :./cgi/hello_world.py
CGI Handling
Query : QUERY_STRING=
CGIHandler iniated with arguments: /usr/bin/python3 ./cgi/hello_world.py
CGIHandler iniated with environment variables: 
SERVER_PROTOCOL=HTTP/1.1
QUERY_STRING=
Output from CGI script: 
Content-Type: text/html

hello world!

Content-type is: text/html
CGI execution was successful.

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Type: text/html
Content-Length: 14


hello world!

***********************************************
send value 78
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
sever socket loop
accepted new co 3
client socket 4
running
selecting
max fd: 4
Read fds: { 3 4 }
Write fds: { }
Client socket ready: { }
Client socket socket: { 4 }
Server socket ready: { 3 }
client socket loop
activated client loop
RequestHandler constructor called
Parsing headers
headersString: GET /cgi/db.txt HTTP/1.1
Host: localhost:8081
Connection: keep-alive
sec-ch-ua: "Google Chrome";v="123", "Not:A-Brand";v="8", "Chromium";v="123"
sec-ch-ua-mobile: ?0
sec-ch-ua-platform: "Linux"
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Referer: http://localhost:8081/cgi/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: fr-FR,fr;q=0.9,el-GR;q=0.8,el;q=0.7,en-US;q=0.6,en;q=0.5


Routing request to server
number of servers : 1
Server name: localhost
-------- Location ------------- /cgi
Host: 127.0.0.1
Port: 8081
Client body size: 1000000
Root dir name: ./data
Index: index.html
Methods:  GET POST GET POST 
Autoindex: on
Return: 
Cgi path: /usr/bin/python3
Extension: py
-------------------------------- 
Request Content length : -1
Location Client Body Size : 1000000
************** bytesread1: ****************
747
***********************************************
location extension : py
path extensiontxt
 ---------- CURRENT LOCATION VALUES ---------- 
Request path : /cgi/db.txt
Final path : ./data/cgi/db.txt
Path before method routing :./data/cgi/db.txt
HANDLING METHOD GET
Requesting ressource at path : ./data/cgi/db.txt
Sending file ./data/cgi/db.txt

cleint data read
sever socket loop
running
client socket ready 4
selecting
max fd: 4
Read fds: { 3 }
Write fds: { 4 }
Client socket ready: { 4 }
Client socket socket: { 4 }
Server socket ready: { 3 }
************** responseString: ****************
HTTP/1.1 200 OK
Content-Disposition: inline
Content-Type: text/plain
Content-Length: 90

Body of the file

Body of the file

Body of the file

Body of the file

Body of the file


***********************************************
send value 184
RequestHandler destructor called
Request destroyed
sever socket loop
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
running
selecting
max fd: 4
Read fds: { 3 }
Write fds: { }
Client socket ready: { }
Client socket socket: { }
Server socket ready: { 3 }
